Restoring modules from user's plumed2_torch
               :-) GROMACS - gmx grompp, 2020.7-plumed-2.8.1 (-:

                            GROMACS is written by:
     Emile Apol      Rossen Apostolov      Paul Bauer     Herman J.C. Berendsen
    Par Bjelkmar      Christian Blau   Viacheslav Bolnykh     Kevin Boyd    
 Aldert van Buuren   Rudi van Drunen     Anton Feenstra       Alan Gray     
  Gerrit Groenhof     Anca Hamuraru    Vincent Hindriksen  M. Eric Irrgang  
  Aleksei Iupinov   Christoph Junghans     Joe Jordan     Dimitrios Karkoulis
    Peter Kasson        Jiri Kraus      Carsten Kutzner      Per Larsson    
  Justin A. Lemkul    Viveca Lindahl    Magnus Lundborg     Erik Marklund   
    Pascal Merz     Pieter Meulenhoff    Teemu Murtola       Szilard Pall   
    Sander Pronk      Roland Schulz      Michael Shirts    Alexey Shvetsov  
   Alfons Sijbers     Peter Tieleman      Jon Vincent      Teemu Virolainen 
 Christian Wennberg    Maarten Wolf      Artem Zhmurov   
                           and the project leaders:
        Mark Abraham, Berk Hess, Erik Lindahl, and David van der Spoel

Copyright (c) 1991-2000, University of Groningen, The Netherlands.
Copyright (c) 2001-2022, The GROMACS development team at
Uppsala University, Stockholm University and
the Royal Institute of Technology, Sweden.
check out http://www.gromacs.org for more information.

GROMACS is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation; either version 2.1
of the License, or (at your option) any later version.

GROMACS:      gmx grompp, version 2020.7-plumed-2.8.1
Executable:   /mnt/home/lyuliyao/gromacs_2020/bin/gmx_mpi
Data prefix:  /mnt/home/lyuliyao/gromacs_2020
Working dir:  /mnt/ufs18/rs-003/MultiscaleML_group/Liyao/consensus_base_enerfy_surface/ala16_sol/consensus26
Command line:
  gmx_mpi grompp -o ala16.tpr -c conf.gro -f grompp2.mdp -maxwarn 3

Ignoring obsolete mdp entry 'optimize-fft'
Ignoring obsolete mdp entry 'ns-type'
Replacing old mdp entry 'verlet-buffer-drift' by 'verlet-buffer-tolerance'
Replacing old mdp entry 'nstxtcout' by 'nstxout-compressed'
Replacing old mdp entry 'xtc-grps' by 'compressed-x-grps'
Replacing old mdp entry 'xtc-precision' by 'compressed-x-precision'

NOTE 1 [file grompp2.mdp]:
  Setting nstcalcenergy (1000) equal to nstenergy (500)

Setting the LD random seed to -5801613
Generated 2145 of the 2145 non-bonded parameter combinations
Generating 1-4 interactions: fudge = 0.5
Generated 2145 of the 2145 1-4 parameter combinations
Excluding 3 bonded neighbours molecule type 'Protein'
Excluding 2 bonded neighbours molecule type 'SOL'
Number of degrees of freedom in T-Coupling group Water is 13545.09
Number of degrees of freedom in T-Coupling group non-Water is 403.91
Estimate for the relative computational load of the PME mesh part: 0.28

There was 1 note

GROMACS reminds you: "The most likely way for the world to be destroyed, most experts agree, is by accident. That's where we come in; we're computer professionals. We cause accidents." (Nathaniel Borenstein)

turning H bonds into constraints...
turning H bonds into constraints...
Analysing residue names:
There are:    17    Protein residues
There are:  2258      Water residues
Analysing Protein...
Calculating fourier grid dimensions for X Y Z
Using a fourier grid of 40x40x40, spacing 0.117 0.117 0.117
This run will generate roughly 25 Mb of data
                :-) GROMACS - gmx mdrun, 2020.7-plumed-2.8.1 (-:

                            GROMACS is written by:
     Emile Apol      Rossen Apostolov      Paul Bauer     Herman J.C. Berendsen
    Par Bjelkmar      Christian Blau   Viacheslav Bolnykh     Kevin Boyd    
 Aldert van Buuren   Rudi van Drunen     Anton Feenstra       Alan Gray     
  Gerrit Groenhof     Anca Hamuraru    Vincent Hindriksen  M. Eric Irrgang  
  Aleksei Iupinov   Christoph Junghans     Joe Jordan     Dimitrios Karkoulis
    Peter Kasson        Jiri Kraus      Carsten Kutzner      Per Larsson    
  Justin A. Lemkul    Viveca Lindahl    Magnus Lundborg     Erik Marklund   
    Pascal Merz     Pieter Meulenhoff    Teemu Murtola       Szilard Pall   
    Sander Pronk      Roland Schulz      Michael Shirts    Alexey Shvetsov  
   Alfons Sijbers     Peter Tieleman      Jon Vincent      Teemu Virolainen 
 Christian Wennberg    Maarten Wolf      Artem Zhmurov   
                           and the project leaders:
        Mark Abraham, Berk Hess, Erik Lindahl, and David van der Spoel

Copyright (c) 1991-2000, University of Groningen, The Netherlands.
Copyright (c) 2001-2022, The GROMACS development team at
Uppsala University, Stockholm University and
the Royal Institute of Technology, Sweden.
check out http://www.gromacs.org for more information.

GROMACS is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation; either version 2.1
of the License, or (at your option) any later version.

GROMACS:      gmx mdrun, version 2020.7-plumed-2.8.1
Executable:   /mnt/home/lyuliyao/gromacs_2020/bin/gmx_mpi
Data prefix:  /mnt/home/lyuliyao/gromacs_2020
Working dir:  /mnt/ufs18/rs-003/MultiscaleML_group/Liyao/consensus_base_enerfy_surface/ala16_sol/consensus26
Command line:
  gmx_mpi mdrun - s ala16.tpr -plumed ./plumed1.dat -ntomp 1 -nsteps 64 -c conf.gro -nb cpu


-------------------------------------------------------
Program:     gmx mdrun, version 2020.7-plumed-2.8.1
Source file: src/gromacs/commandline/cmdlineparser.cpp (line 171)
Function:    void gmx::CommandLineParser::parse(int*, char**)

Error in user input:
Positional argument '-' cannot be accepted. Perhaps you forgot to put a hyphen
before an option name.

For more information and tips for troubleshooting, please check the GROMACS
website at http://www.gromacs.org/Documentation/Errors
-------------------------------------------------------
--------------------------------------------------------------------------
MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD
with errorcode 1.

NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.
You may or may not see output from other processes, depending on
exactly when Open MPI kills them.
--------------------------------------------------------------------------
srun: error: amr-028: task 0: Exited with exit code 1
               :-) GROMACS - gmx grompp, 2020.7-plumed-2.8.1 (-:

                            GROMACS is written by:
     Emile Apol      Rossen Apostolov      Paul Bauer     Herman J.C. Berendsen
    Par Bjelkmar      Christian Blau   Viacheslav Bolnykh     Kevin Boyd    
 Aldert van Buuren   Rudi van Drunen     Anton Feenstra       Alan Gray     
  Gerrit Groenhof     Anca Hamuraru    Vincent Hindriksen  M. Eric Irrgang  
  Aleksei Iupinov   Christoph Junghans     Joe Jordan     Dimitrios Karkoulis
    Peter Kasson        Jiri Kraus      Carsten Kutzner      Per Larsson    
  Justin A. Lemkul    Viveca Lindahl    Magnus Lundborg     Erik Marklund   
    Pascal Merz     Pieter Meulenhoff    Teemu Murtola       Szilard Pall   
    Sander Pronk      Roland Schulz      Michael Shirts    Alexey Shvetsov  
   Alfons Sijbers     Peter Tieleman      Jon Vincent      Teemu Virolainen 
 Christian Wennberg    Maarten Wolf      Artem Zhmurov   
                           and the project leaders:
        Mark Abraham, Berk Hess, Erik Lindahl, and David van der Spoel

Copyright (c) 1991-2000, University of Groningen, The Netherlands.
Copyright (c) 2001-2022, The GROMACS development team at
Uppsala University, Stockholm University and
the Royal Institute of Technology, Sweden.
check out http://www.gromacs.org for more information.

GROMACS is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation; either version 2.1
of the License, or (at your option) any later version.

GROMACS:      gmx grompp, version 2020.7-plumed-2.8.1
Executable:   /mnt/home/lyuliyao/gromacs_2020/bin/gmx_mpi
Data prefix:  /mnt/home/lyuliyao/gromacs_2020
Working dir:  /mnt/ufs18/rs-003/MultiscaleML_group/Liyao/consensus_base_enerfy_surface/ala16_sol/consensus26
Command line:
  gmx_mpi grompp -o ala16.tpr -c conf.gro -f grompp.mdp -maxwarn 3

Ignoring obsolete mdp entry 'optimize-fft'
Ignoring obsolete mdp entry 'ns-type'
Replacing old mdp entry 'verlet-buffer-drift' by 'verlet-buffer-tolerance'
Replacing old mdp entry 'nstxtcout' by 'nstxout-compressed'
Replacing old mdp entry 'xtc-grps' by 'compressed-x-grps'
Replacing old mdp entry 'xtc-precision' by 'compressed-x-precision'

NOTE 1 [file grompp.mdp]:
  Setting nstcalcenergy (1000) equal to nstenergy (500)

Setting the LD random seed to -144851075
Generated 2145 of the 2145 non-bonded parameter combinations
Generating 1-4 interactions: fudge = 0.5
Generated 2145 of the 2145 1-4 parameter combinations
Excluding 3 bonded neighbours molecule type 'Protein'
Excluding 2 bonded neighbours molecule type 'SOL'
Number of degrees of freedom in T-Coupling group Water is 13545.09
Number of degrees of freedom in T-Coupling group non-Water is 403.91
Estimate for the relative computational load of the PME mesh part: 0.28

There was 1 note

GROMACS reminds you: "Hold On Like Cliffhanger" (Urban Dance Squad)

turning H bonds into constraints...
turning H bonds into constraints...
Analysing residue names:
There are:    17    Protein residues
There are:  2258      Water residues
Analysing Protein...
Calculating fourier grid dimensions for X Y Z
Using a fourier grid of 40x40x40, spacing 0.117 0.117 0.117
This run will generate roughly 25 Mb of data
                :-) GROMACS - gmx mdrun, 2020.7-plumed-2.8.1 (-:

                            GROMACS is written by:
     Emile Apol      Rossen Apostolov      Paul Bauer     Herman J.C. Berendsen
    Par Bjelkmar      Christian Blau   Viacheslav Bolnykh     Kevin Boyd    
 Aldert van Buuren   Rudi van Drunen     Anton Feenstra       Alan Gray     
  Gerrit Groenhof     Anca Hamuraru    Vincent Hindriksen  M. Eric Irrgang  
  Aleksei Iupinov   Christoph Junghans     Joe Jordan     Dimitrios Karkoulis
    Peter Kasson        Jiri Kraus      Carsten Kutzner      Per Larsson    
  Justin A. Lemkul    Viveca Lindahl    Magnus Lundborg     Erik Marklund   
    Pascal Merz     Pieter Meulenhoff    Teemu Murtola       Szilard Pall   
    Sander Pronk      Roland Schulz      Michael Shirts    Alexey Shvetsov  
   Alfons Sijbers     Peter Tieleman      Jon Vincent      Teemu Virolainen 
 Christian Wennberg    Maarten Wolf      Artem Zhmurov   
                           and the project leaders:
        Mark Abraham, Berk Hess, Erik Lindahl, and David van der Spoel

Copyright (c) 1991-2000, University of Groningen, The Netherlands.
Copyright (c) 2001-2022, The GROMACS development team at
Uppsala University, Stockholm University and
the Royal Institute of Technology, Sweden.
check out http://www.gromacs.org for more information.

GROMACS is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation; either version 2.1
of the License, or (at your option) any later version.

GROMACS:      gmx mdrun, version 2020.7-plumed-2.8.1
Executable:   /mnt/home/lyuliyao/gromacs_2020/bin/gmx_mpi
Data prefix:  /mnt/home/lyuliyao/gromacs_2020
Working dir:  /mnt/ufs18/rs-003/MultiscaleML_group/Liyao/consensus_base_enerfy_surface/ala16_sol/consensus26
Command line:
  gmx_mpi mdrun -s ../ala16.tpr -c conf.gro -plumed ../plumed.dat -multidir ./esamble_1 ./esamble_2 ./esamble_3 ./esamble_4 ./esamble_5 ./esamble_6 ./esamble_7 ./esamble_8 ./esamble_9 ./esamble_10 ./esamble_11 ./esamble_12 ./esamble_13 ./esamble_14 ./esamble_15 ./esamble_16 ./esamble_17 ./esamble_18 ./esamble_19 ./esamble_20 ./esamble_21 ./esamble_22 ./esamble_23 ./esamble_24 ./esamble_25 ./esamble_26 ./esamble_27 ./esamble_28 ./esamble_29 ./esamble_30 ./esamble_31 ./esamble_32 ./esamble_33 ./esamble_34 ./esamble_35 ./esamble_36 ./esamble_37 ./esamble_38 ./esamble_39 ./esamble_40 ./esamble_41 ./esamble_42 ./esamble_43 ./esamble_44 ./esamble_45 ./esamble_46 ./esamble_47 ./esamble_48 ./esamble_49 ./esamble_50 ./esamble_51 ./esamble_52 ./esamble_53 ./esamble_54 ./esamble_55 ./esamble_56 ./esamble_57 ./esamble_58 ./esamble_59 ./esamble_60 ./esamble_61 ./esamble_62 ./esamble_63 ./esamble_64 -ntomp 1 -nsteps 2500000 -nb cpu

Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Reading file ../ala16.tpr, VERSION 2020.7-plumed-2.8.1 (single precision)
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Can not increase nstlist because verlet-buffer-tolerance is not set or used
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used

This is simulation 2 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps

This is simulation 52 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 6 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps

This is simulation 60 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 1 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes
Can not increase nstlist because verlet-buffer-tolerance is not set or used

This is simulation 54 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 4 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes
Can not increase nstlist because verlet-buffer-tolerance is not set or used

This is simulation 53 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 5 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used

This is simulation 55 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 3 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 44 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 56 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 7 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 15 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 24 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 35 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes
Overriding nsteps with value passed on the command line: 2500000 steps, 5e+03 ps
Can not increase nstlist because verlet-buffer-tolerance is not set or used

This is simulation 43 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 9 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 57 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 0 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 16 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 25 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 32 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 47 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 37 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 8 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 58 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

Non-default thread affinity set, disabling internal thread affinity

This is simulation 17 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 29 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 33 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 48 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 39 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 10 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 59 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

Non-default thread affinity set, disabling internal thread affinity

This is simulation 18 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 23 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 34 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 50 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 40 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 12 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 61 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

Non-default thread affinity set, disabling internal thread affinity

This is simulation 19 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 26 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 31 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 46 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 41 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 13 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 62 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

Non-default thread affinity set, disabling internal thread affinity

This is simulation 20 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 27 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 36 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 49 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 42 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 14 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 63 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

Non-default thread affinity set, disabling internal thread affinity

This is simulation 21 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 28 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 30 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 45 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

This is simulation 11 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

This is simulation 22 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

This is simulation 51 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Non-default thread affinity set, disabling internal thread affinity

Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


This is simulation 38 out of 64 running as a composite GROMACS
multi-simulation job. Setup for this simulation:

Using 8 MPI processes

Non-default thread affinity set, disabling internal thread affinity

Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Non-default thread affinity set, disabling internal thread affinity

Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Non-default thread affinity set, disabling internal thread affinity

Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Non-default thread affinity set, disabling internal thread affinity

Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Non-default thread affinity set, disabling internal thread affinity

Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Non-default thread affinity set, disabling internal thread affinity

Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Non-default thread affinity set, disabling internal thread affinity

Using 1 OpenMP thread per MPI process



Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Non-default thread affinity set, disabling internal thread affinity

Using 1 OpenMP thread per MPI process

Using 1 OpenMP thread per MPI process

Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process



Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process


Using 1 OpenMP thread per MPI process

starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
1
starting mdrun 'Protein in water'
2500000 steps,   5000.0 ps.
6
6
19
6
19
6
19
6
19
6
19
6
19
6
19
33
38
11
1
19
33
38
11
1
18
32
38
11
1
18
32
38
11
1
18
32
41
11
1
18
32
41
11
1
18
25
32
38
11
1
18
23
32
38
11
3
18
23
33
38
10
3
18
23
34
38
10
3
21
23
31
39
10
3
21
23
31
39
10
3
21
24
31
39
10
3
21
24
31
39
10
3
21
24
31
39
10
3
21
24
31
39
13
2
21
24
30
39
13
2
21
24
30
39
13
2
24
33
40
13
2
17
28
33
40
13
2
16
23
33
40
13
2
16
25
33
40
13
52
2
16
25
32
50
40
13
52
2
16
25
34
50
40
9
52
5
16
25
34
50
9
52
5
16
25
34
50
40
9
5
16
25
36
50
40
9
52
5
17
25
36
50
41
9
52
5
17
23
36
50
41
9
52
5
20
24
36
50
41
9
52
5
20
30
49
41
10
56
5
16
22
30
49
41
9
56
0
17
22
49
41
56
0
17
22
30
49
42
8
56
0
17
22
30
49
43
8
56
0
17
22
31
49
43
8
56
0
17
22
32
49
43
8
56
0
20
22
34
49
43
8
56
0
20
26
34
47
43
8
57
0
20
26
34
47
42
8
4
20
26
34
47
42
12
57
4
20
26
35
47
42
12
57
4
20
26
35
47
42
12
57
4
14
26
35
47
42
12
57
4
14
26
35
46
42
8
57
4
22
26
30
46
42
12
57
4
15
27
31
46
43
12
57
4
15
27
33
46
43
12
61
7
15
27
35
43
12
61
7
15
27
35
46
36
14
61
7
15
27
35
46
37
14
61
15
27
35
46
37
14
61
15
27
36
46
37
14
61
15
27
36
47
37
14
61
28
36
47
37
14
61
28
29
48
37
7
53
28
29
48
37
7
53
28
29
48
37
7
53
28
29
48
44
7
53
28
30
48
44
7
53
28
48
53
29
48
53
29
48
53
29
44
63
29
44
63
23
44
63
44
63
44
63
44
63
45
63
45
63
45
62
45
62
45
62
45
62
45
62
45
62
51
62
51
62
51
60
51
60
51
60
60
54
54
54
54
54
54
54
54
58
58
58
58
58
58
58
58
60
60
60
60
55
55
55
55
55
55
55
55
51
51
51
59
59
59
59
59
59
59
59

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.

Writing final coordinates.


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.4%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 3.5%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.6%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.5%.
 The balanceable part of the MD step is 44%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.1%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 3.9%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.8%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 3.9%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.7%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.0%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.8%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 3.8%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.7%.



Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 2.1%.
 The balanceable part of the MD step is 44%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 0.9%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %




Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.1%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 3.6%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.6%.




Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.0%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.8%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.0%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.8%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.0%.
 The balanceable part of the MD step is 44%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.8%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.4%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.


NOTE: 2 % of the run time was spent in domain decomposition,
      11 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.4%.
 The balanceable part of the MD step is 44%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.1%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 47%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.1%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.4%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 2.3%.
 The balanceable part of the MD step is 43%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.0%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 47%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.1%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.


NOTE: 2 % of the run time was spent in domain decomposition,
      11 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 3.7%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.7%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.1%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 3.9%.
 The balanceable part of the MD step is 47%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.8%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 44%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB got disabled because it was unsuitable to use.
 Average load imbalance: 18.9%.
 The balanceable part of the MD step is 36%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 6.7%.

NOTE: 6.7 % of the available CPU time was lost due to load imbalance
      in the domain decomposition.
      You might want to use dynamic load balancing (option -dlb.)
      You can also consider manually changing the decomposition (option -dd);
      e.g. by using fewer domains along the box dimension in which there is
      considerable inhomogeneity in the simulated system.

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 3.6%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.6%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.1%.
 The balanceable part of the MD step is 47%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 2.3%.
 The balanceable part of the MD step is 43%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.0%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.


NOTE: 2 % of the run time was spent in domain decomposition,
      11 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 2.4%.
 The balanceable part of the MD step is 43%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.0%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)
NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.0%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.8%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 3.5%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.6%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 45%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 2.4%.
 The balanceable part of the MD step is 43%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.0%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      11 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.3%.
 The balanceable part of the MD step is 47%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)
NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.



Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 2.2%.
 The balanceable part of the MD step is 44%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.0%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.2%.
 The balanceable part of the MD step is 47%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 2.0%.



Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 4.1%.
 The balanceable part of the MD step is 46%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.9%.


NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

NOTE: 2 % of the run time was spent in domain decomposition,
      13 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)


Dynamic load balancing report:
 DLB was turned on during the run due to measured imbalance.
 Average load imbalance: 2.3%.
 The balanceable part of the MD step is 43%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 1.0%.
 Steps where the load balancing was limited by -rdd, -rcon and/or -dds: X 0 % Y 0 %


NOTE: 2 % of the run time was spent in domain decomposition,
      12 % of the run time was spent in pair search,
      you might want to increase nstlist (this has no effect on accuracy)

GROMACS reminds you: "There's an old saying among scientific guys: “You can't make an omelet without breaking eggs, ideally by dropping a cement truck on them from a crane." (Dave Barry)

rm: 缺少操作数
Try 'rm --help' for more information.
rm: 无法删除"bck.*": 没有那个文件或目录
JobID                     Submit  Partition    CPUTime    Elapsed     MaxRSS        NodeList  ReqCPUS 
------------ ------------------- ---------- ---------- ---------- ---------- --------------- -------- 
20533584     2023-08-12T08:22:47 general-s+ 25-16:57:36   01:12:18            amr-[028-034,0+      512 
20533584.ba+ 2023-08-17T15:17:45            2-23:05:42   01:12:18                    amr-028       59 
20533584.ex+ 2023-08-17T15:17:45            25-16:57:36   01:12:18            amr-[028-034,0+      512 
20533584.0   2023-08-17T15:17:56              00:02:57   00:00:03                    amr-028       59 
20533584.1   2023-08-17T15:18:02              00:01:58   00:00:02                    amr-028       59 
20533584.2   2023-08-17T15:18:08              00:01:58   00:00:02                    amr-028       59 
20533584.3   2023-08-17T15:18:13            25-12:50:08   01:11:49    134.61M amr-[028-034,0+      512 
